for 16MB pages it shoudl be 31:24 bits for the tag

3.2.57 in Coretex-A8 manual for shoving entries into te TLB
WE NEED PAGE TABLES, A WALK WILL BE PERFORMED


---
was brought into the TLB with the ASID that matches the current value held in the CONTEXTIDR, 
see c13, Context ID Register (CONTEXTIDR) on pageB3-153. 
... not sure exactly what the entries should look like in the TLB
---

 --
[_] mmu during caches		
[_] mmu before caches		
[_] mmu after caches		
[_] enable instruction cache in control register
[_] enable data        cache in control register

cp15 c10, memory remap registers for TEX / TRE remapping???
N=24 for ([31:24]) for supersections

try enabling caches...
try enabling MMU without anything...
how to do flat mapping?
In ARMv7 Arch Reference
- Address Space ID (ASID) distinguishes between global and process specific mappings
- FORMAT:
  0000 0000 0000 0000  0000 0000 0000 0000
  1000 0000 0000 1100  0000 1100 0000 1010
  PA        rsrv       |    ||
                       `----++-full access
                    for TEX and C, B bits, will try setting them to:
			000 01 - device for device memory
			000 10 - normal for normal memory
  
  31-24             23-20 19 18 17 16 15    14-12 11-10   9-5  4  3 2 1 0
  base address (PA) rsrv  NS 1  nG S  AP[2] TEX   AP[1:0] rsrv NX C B 1 0
                                0  0                           0
                                "Not Global" bit should be 0
                                   Shared bit should be 0      "Execute Never" bit should be 0
need to cover
0x80000000 # code, then kmalloc space
                            | supersection index
VA = 0x80000000 = b1000 0000 0000 0000 0000 0000 0000 0000
                     table index |
fld at addr Y
page table is                  |
YYYY YYYY YYYY YYYY YY10 0000 0000 0000
but must also go to
YYYY YYYY YYYY YYYY YY10 0000 0011 1100
12 bits for table index
and must map to 0x8000 0000


0x4020ffc8 # vectors
0x48...... # hardware
0x49...... # hardware
0x2B...... # ETH2_BASE
0x2C...... # ETH1_BASE
0x8FFFFFFF # kernel stack (earth)
0xA0000000 # kernel stack (tide)

Fault Registers
/*
DFSR on B3-121 CP15 c5, read: MRC p15,0,<Rt>,c5,c0,0
IFSR on B3-122
DFAR on B3-124 -- updatd with MRC p15,0,<Rt>,c6,c0,0
IFAR on B3-125 (for prefetch?)
*/
